DROP SCHEMA IF EXISTS freshrooms CASCADE;
CREATE SCHEMA freshrooms;

create table if not exists freshrooms.accountcode (
    id integer generated by default as identity,
    guid VARCHAR NOT NULL UNIQUE,
    accperm VARCHAR NOT NULL,
    isUsed BOOLEAN NOT NULL,

    constraint usercodepk
        primary key (id)
);

create table if not exists freshrooms.users (
    userId integer NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    city VARCHAR(255),
    isDeleted boolean NOT NULL,
    constraint userpk
        primary key (userId),
    foreign key(userId) references freshrooms.accountcode(id)
);

create table if not exists freshrooms.password_hash (
    user_id integer,
    hash VARCHAR(350) NOT NULL ,
    salt VARCHAR(180) NOT NULL ,
    algorithm VARCHAR(12) NOT NULL ,
    FOREIGN KEY(user_id) REFERENCES freshrooms.users(userId)
);

create table if not exists freshrooms.rooms (
    roomId integer generated by default as identity,
    userId integer,
    roomName VARCHAR(100) NOT NULL,
    constraint roompk
        primary key (roomId),
    foreign key(userId) references freshrooms.users(userId)
);

create table if not exists freshrooms.devices (
    deviceId VARCHAR(36) NOT NULL UNIQUE ,
    roomId integer,
    deviceType VARCHAR(100),
    constraint devicepk
        primary key (deviceId),
    foreign key(roomId) references freshrooms.rooms(roomId)
);

create table if not exists freshrooms.devicedata (
    sensorId VARCHAR(36) NOT NULL UNIQUE,
    temp FLOAT,
    hum FLOAT,
    aq FLOAT,
    timeStamp TIMESTAMP,
    foreign key(sensorId) references freshrooms.devices(deviceId)
);

create table if not exists freshrooms.historicData (
    sensorId VARCHAR(36) NOT NULL,
    temp FLOAT,
    hum FLOAT,
    aq FLOAT,
    timeStamp TIMESTAMP,
    foreign key(sensorId) references freshrooms.devices(deviceId)
);

create table if not exists freshrooms.motorstatus (
    motorId VARCHAR(36) NOT NULL UNIQUE,
    isOpen boolean NOT NULL,
    isDisabled boolean NOT NULL,
    foreign key(motorId) references freshrooms.devices(deviceId)
);

create table if not exists freshrooms.devicetypes (
    deviceTypeId integer generated by default as identity,
    deviceTypeName VARCHAR(100) NOT NULL UNIQUE,
    isDeleted boolean NOT NULL,
    constraint devicetypepk
        primary key (deviceTypeId)
);

create table if not exists freshrooms.roomConfig (
    roomId integer NOT NULL,
    minTemparature decimal NOT NULL,
    maxTemparature decimal NOT NULL,
    minHumidity decimal NOT NULL,
    maxHumidity decimal NOT NULL,
    minAq decimal NOT NULL,
    maxAq decimal NOT NULL,
    foreign key(roomId) references freshrooms.rooms(roomid)
);
